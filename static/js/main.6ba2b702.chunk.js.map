{"version":3,"sources":["assets/monese_horizontal_lockup_RGB.png","assets/ic-arrow-down-dark-17-dp.svg","assets/flag-icon.svg","assets/ic-arrow-down-dark-thin-11-dp.svg","assets/ic-arrow-right-white-25-dp.svg","components/AbsoluteLogo.js","components/DropDownRow.js","components/DropDown.js","components/PhoneInput.js","components/LanguageSelection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AbsoluteLogo","react_default","a","createElement","className","src","monese_logo","alt","DropDownRow","_ref","clickHandler","item","key","country","onClick","source","phonePrefix","Dropdown","array","dropdownData","outSideClickHandler","countrySelectHandler","ref","useRef","_useState","useState","_useState2","Object","slicedToArray","searchValue","setSearchValue","handleClick","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","filter","value","toLowerCase","includes","map","components_DropDownRow","length","autoComplete","type","onChange","e","placeholder","id","required","PhoneInput","dropdown","iconClass","validityHandler","dropDownData","_useState3","_useState4","selectedCountry","setSelectedCountry","_useState5","_useState6","showDropDown","setShowDropDown","components_DropDown","newSelectedCountry","phone_select_arrow","isNaN","LanguageSelection","country_flag","country_select_arrrow","App","nextButtonClass","setNextButtonClass","src_components_AbsoluteLogo","src_components_LanguageSelection","src_components_PhoneInput","href","NextButtonArrow","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ba2b702.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monese_horizontal_lockup_RGB.c8a9b661.png\";","module.exports = __webpack_public_path__ + \"static/media/ic-arrow-down-dark-17-dp.e1528e3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag-icon.7b17a299.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-arrow-down-dark-thin-11-dp.9e7863aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-arrow-right-white-25-dp.267e2c99.svg\";","import React from \"react\";\r\nimport \"./AbsoluteLogo.scss\";\r\nimport monese_logo from \"./../assets/monese_horizontal_lockup_RGB.png\";\r\n\r\nconst AbsoluteLogo = () => {\r\n    return (\r\n      <div className=\"header__logo-box\">\r\n        <img className=\"header__logo-box-img\" src={monese_logo} alt=\"Logo\" />\r\n      </div>\r\n    );\r\n}\r\nexport default AbsoluteLogo;\r\n","import React from \"react\";\r\nimport \"./DropDown.scss\";\r\n\r\nconst DropDownRow = ({ clickHandler, item }) => {\r\n  return (\r\n    <li\r\n      key={item.country}\r\n      onClick={() => clickHandler(item)}\r\n      className=\"login__li\"\r\n    >\r\n      <img\r\n        className=\"login__flag\"\r\n        src={\r\n          \"https://static.monese.com/s/flags-6/flag_\" +\r\n          item.source +\r\n          \"_17dp.png\"\r\n        }\r\n        alt=\"country-flag\"\r\n      />\r\n      {item.country} ({item.phonePrefix})\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DropDownRow;\r\n","import \"./DropDown.scss\";\r\nimport DropDownRow from \"./DropDownRow.js\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\n\r\nconst Dropdown = ({\r\n  dropdownData,\r\n  outSideClickHandler,\r\n  countrySelectHandler\r\n}) => {\r\n  const ref = useRef(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const handleClick = event => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      outSideClickHandler();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let array;\r\n  if (dropdownData) {\r\n    array = dropdownData\r\n      .filter(value =>\r\n        value.country.toLowerCase().includes(searchValue.toLowerCase())\r\n      )\r\n      .map(item => (\r\n        <DropDownRow\r\n          key={item.country}\r\n          item={item}\r\n          clickHandler={countrySelectHandler}\r\n        />\r\n      ));\r\n  }\r\n\r\n  if (array.length === 0) {\r\n    array = \"No results found\";\r\n  }\r\n  return (\r\n    <div ref={ref} className=\"login__box\">\r\n      <ul className=\"login__ul\">\r\n        <li className=\"login__li\">\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            value={searchValue}\r\n            onChange={e => setSearchValue(e.target.value)}\r\n            className=\"login__country-search\"\r\n            placeholder=\"Search ...\"\r\n            id=\"name\"\r\n            required\r\n          />\r\n        </li>\r\n        {array}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useState } from \"react\";\r\nimport \"./PhoneInput.scss\";\r\nimport phone_select_arrow from \"./../assets/ic-arrow-down-dark-17-dp.svg\";\r\nimport DropDown from \"./DropDown\";\r\n\r\nconst PhoneInput = ({ validityHandler, item }) => {\r\n  const [dropDownData] = useState([\r\n    { country: \"United Kingdom\", source: \"united_kingdom\", phonePrefix: \"+44\" },\r\n    { country: \"Germany\", source: \"germany\", phonePrefix: \"+49\" },\r\n    { country: \"France\", source: \"france\", phonePrefix: \"+33\" },\r\n    { country: \"Spain\", source: \"spain\", phonePrefix: \"+34\" },\r\n    { country: \"Italy\", source: \"italy\", phonePrefix: \"+39\" },\r\n    { country: \"Romania\", source: \"romania\", phonePrefix: \"+40\" },\r\n    { country: \"Poland\", source: \"poland\", phonePrefix: \"+48\" },\r\n    { country: \"Austria\", source: \"austria\", phonePrefix: \"+43\" }\r\n  ]);\r\n\r\n  let [selectedCountry, setSelectedCountry] = useState({\r\n    country: \"United Kingdom\",\r\n    source: \"united_kingdom\",\r\n    phonePrefix: \"+44\"\r\n  });\r\n\r\n  let [showDropDown, setShowDropDown] = useState(false);\r\n\r\n  const handleOutSideClick = () => {\r\n    setShowDropDown(false);\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    if (e.target.value && e.target.value.length > 3 && !isNaN(e.target.value)) {\r\n      validityHandler(true);\r\n    } else {\r\n      validityHandler(false);\r\n    }\r\n  };\r\n\r\n  const countrySelectHandler = newSelectedCountry => {\r\n    setSelectedCountry(newSelectedCountry);\r\n  };\r\n\r\n  let dropdown;\r\n  let iconClass;\r\n  if (showDropDown) {\r\n    dropdown = (\r\n      <DropDown\r\n        dropdownData={dropDownData}\r\n        outSideClickHandler={handleOutSideClick}\r\n        countrySelectHandler={countrySelectHandler}\r\n      />\r\n    );\r\n    iconClass = \" signup__block--arrow-active rotate \"\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"flex-grid flex-grid--sm-col\">\r\n          <div className=\"col-1 flexbox-center flex-grid--sm-col\">\r\n            <div\r\n              className=\"flex-grid curson-pointer flex-grid-sm-center\"\r\n              onClick={() => setShowDropDown((showDropDown = !showDropDown))}\r\n            >\r\n              <img\r\n                className=\"signup__block--flag\"\r\n                src={\r\n                  \"https://static.monese.com/s/flags-6/flag_\" +\r\n                  selectedCountry.source +\r\n                  \"_17dp.png\"\r\n                }\r\n                alt=\"flag\"\r\n              />\r\n              <div>\r\n                <span className=\"signup__block--phone-prefix\">\r\n                  {selectedCountry.phonePrefix}\r\n                </span>\r\n                <img\r\n                  className= {\"signup__block--arrow \" + iconClass}\r\n                  src={phone_select_arrow}\r\n                  alt=\"arrow\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <input\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              className=\"form__input phone__number--input px-sm-0\"\r\n              onChange={handleInputChange}\r\n              placeholder=\"Your phone number\"\r\n              id=\"name\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"signup__block--underline\" />\r\n      {dropdown}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhoneInput;\r\n","import React from \"react\";\r\nimport \"./LanguageSelection.scss\";\r\nimport country_flag from \"./../assets/flag-icon.svg\";\r\nimport country_select_arrrow from \"./../assets/ic-arrow-down-dark-thin-11-dp.svg\";\r\n\r\nconst LanguageSelection = () => {\r\n  return (\r\n    <div className=\"language-select-box\">\r\n      <div className=\"flex-grid\">\r\n        <img src={country_flag} alt=\"country-flag\" />\r\n        <span className=\"language-select-text\">English</span>\r\n        <img\r\n          className=\"language-select-arrow\"\r\n          src={country_select_arrrow}\r\n          alt=\"arrow\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LanguageSelection;\r\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport AbsoluteLogo from \"./components/AbsoluteLogo\";\nimport PhoneInput from \"./components/PhoneInput\";\nimport LanguageSelection from \"./components/LanguageSelection\";\nimport NextButtonArrow from \"./assets/ic-arrow-right-white-25-dp.svg\";\n\nfunction App() {\n  let [nextButtonClass, setNextButtonClass] = useState(\"btn--disabled\");\n\n  const validityHandler = value => {\n    if (!value) {\n      setNextButtonClass(\"btn--disabled\");\n    } else {\n      setNextButtonClass(\"btn--enabled\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"flex-grid workfluid--header\">\n        <div className=\"flexbox-center\">\n          <AbsoluteLogo />\n        </div>\n        <div className=\"flexbox-center\">\n          <LanguageSelection />\n        </div>\n      </header>\n      <div className=\"workfluid\">\n        <h1 className=\"heading-primary\">\n          <span className=\"heading-primary--main px-sm-0\">\n            Log in to your current account,\n          </span>\n          <span className=\"heading-primary--main heading-primary--main-bottom\">\n            wherever you are\n          </span>\n        </h1>\n        <div className=\"phone-block\">\n          <PhoneInput validityHandler={validityHandler} />\n        </div>\n        <div className=\"my-4 mr-5 heading-secondary\">\n          <div className=\"float-left\">\n            Use the one linked to your Monese account\n          </div>\n        </div>\n        <div className=\"pt-5\">\n          <button href=\"#section-tours\" className={\"btn \" + nextButtonClass}>\n            <div className=\"flex-grid\">\n              <div className=\"flexbox-center btn__inner-text-next\">Next</div>\n              <img\n                className=\"btn__inner-arrow-next\"\n                src={NextButtonArrow}\n                alt=\"arrow\"\n              />\n            </div>\n          </button>\n        </div>\n        <div className=\"link__missing-account\">\n          <a href=\"#0\">Don't have an account?</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}